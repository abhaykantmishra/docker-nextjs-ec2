name: Deploy Next.js App to EC2 with Versioning

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set release timestamp
        run: echo "RELEASE=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      # Step to create .env.local from secrets
      - name: Create .env.local
        run: |
          echo "NEXT_PUBLIC_DATA_ENCRYPTION_SECRET=${{ secrets.NEXT_PUBLIC_DATA_ENCRYPTION_SECRET }}" >> .env.local
          echo "TOKEN_SECRET=${{ secrets.TOKEN_SECRET }}" >> .env.local
          echo "NEXT_PUBLIC_TOKEN_SECRET=${{ secrets.NEXT_PUBLIC_TOKEN_SECRET }}" >> .env.local
          echo "NEXT_PUBLIC_BACKENDAPI=${{ secrets.NEXT_PUBLIC_BACKENDAPI }}" >> .env.local
          echo "NEXT_PUBLIC_APPWRITE_ROADMAP_COLLECTIONID=${{ secrets.NEXT_PUBLIC_APPWRITE_ROADMAP_COLLECTIONID }}" >> .env.local
          echo "NEXT_PUBLIC_APPWRITE_DISCUSS_COLLECTIONID=${{ secrets.NEXT_PUBLIC_APPWRITE_DISCUSS_COLLECTIONID }}" >> .env.local
          echo "NEXT_PUBLIC_APPWRITE_USERDATA_COLLECTIONID=${{ secrets.NEXT_PUBLIC_APPWRITE_USERDATA_COLLECTIONID }}" >> .env.local
          echo "NEXT_PUBLIC_APPWRITE_DATABASEID=${{ secrets.NEXT_PUBLIC_APPWRITE_DATABASEID }}" >> .env.local
          echo "NEXT_PUBLIC_APPWRITE_PROJECTID=${{ secrets.NEXT_PUBLIC_APPWRITE_PROJECTID }}" >> .env.local
          echo "NEXT_PUBLIC_APPWRITE_URL=${{ secrets.NEXT_PUBLIC_APPWRITE_URL }}" >> .env.local

      - name: Upload to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "/home/ubuntu/app/releases/${{ env.RELEASE }}"

      - name: SSH and deploy latest
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app
            echo "ðŸ”„ Updating current symlink to new release: ${{ env.RELEASE }}"
            ln -sfn releases/${{ env.RELEASE }} current

            cd current
            docker-compose down || true
            docker-compose up -d --build

            echo "âœ… Deployment complete: ${{ env.RELEASE }}"
